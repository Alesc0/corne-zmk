/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 2 3 4 5 13 14 15 16 17 25 26 27 28 29 1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 0 24>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        cb_delete {
            bindings = <&kp DELETE>;
            key-positions = <31 32>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                      &kp Q  &kp W              &kp E                 &kp R                   &kp T        &kp Y    &kp U                   &kp I                 &kp O              &kp P     &kp BSPC
&hold_tap LEFT_SHIFT ESCAPE  &kp A  &hold_tap LCTRL S  &hold_tap LEFT_ALT D  &hold_tap LEFT_SHIFT F  &kp G        &kp H    &hold_tap LEFT_SHIFT J  &hold_tap LEFT_ALT K  &hold_tap LCTRL L  &kp SEMI  &kp SQT
&kp LEFT_CONTROL             &kp Z  &kp X              &kp C                 &kp V                   &kp B        &kp N    &kp M                   &kp COMMA             &kp DOT            &kp FSLH  &kp RIGHT_SHIFT
                                                       &kp LEFT_ALT          &mo 1                   &kp SPACE    &kp RET  &mo 2                   &kp LEFT_WIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7         &kp N8       &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &kp DELETE
&trans  &trans  &trans  &trans    &trans  &trans       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
                        &kp LGUI  &trans  &kp SPACE    &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans
&trans  &trans           &trans       &trans    &trans      &trans         &kp MINUS  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH  &kp GRAVE
&trans  &trans           &trans       &trans    &trans      &trans         &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE  &kp TILDE
                                      &kp LGUI  &trans      &kp SPACE      &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans    &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans  &bt BT_CLR    &trans        &trans        &trans  &trans    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                                    &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer3 {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
